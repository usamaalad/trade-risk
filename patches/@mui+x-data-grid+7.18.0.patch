diff --git a/node_modules/@mui/x-data-grid/components/GridFooter.js b/node_modules/@mui/x-data-grid/components/GridFooter.js
index 9986d99..e992925 100644
--- a/node_modules/@mui/x-data-grid/components/GridFooter.js
+++ b/node_modules/@mui/x-data-grid/components/GridFooter.js
@@ -13,16 +13,13 @@ import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
 const GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {
   const apiRef = useGridApiContext();
   const rootProps = useGridRootProps();
+  const rowCountElement = null;
   const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);
   const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);
   const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);
   const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {
     selectedRowCount: selectedRowCount
   }) : /*#__PURE__*/_jsx("div", {});
-  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, rootProps.slotProps?.footerRowCount, {
-    rowCount: totalTopLevelRowCount,
-    visibleRowCount: visibleTopLevelRowCount
-  })) : null;
   const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, rootProps.slotProps?.pagination));
   return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({
     ref: ref
diff --git a/node_modules/@mui/x-data-grid/components/GridPagination.js b/node_modules/@mui/x-data-grid/components/GridPagination.js
index 56492da..09e10bd 100644
--- a/node_modules/@mui/x-data-grid/components/GridPagination.js
+++ b/node_modules/@mui/x-data-grid/components/GridPagination.js
@@ -46,10 +46,7 @@ const defaultLabelDisplayedRows = ({
   count,
   estimated
 }) => {
-  if (!estimated) {
-    return `${from}â€“${to} of ${count !== -1 ? count : `more than ${to}`}`;
-  }
-  return `${from}â€“${to} of ${count !== -1 ? count : `more than ${estimated > to ? estimated : to}`}`;
+  return "";
 };
 
 // A mutable version of a readonly array.
